{"ast":null,"code":"import { BREAK, visit } from \"graphql\";\nexport function hasForcedResolvers(document) {\n  let forceResolvers = false;\n  visit(document, {\n    Directive: {\n      enter(node) {\n        if (node.name.value === \"client\" && node.arguments) {\n          forceResolvers = node.arguments.some(arg => arg.name.value === \"always\" && arg.value.kind === \"BooleanValue\" && arg.value.value === true);\n          if (forceResolvers) {\n            return BREAK;\n          }\n        }\n      }\n    }\n  });\n  return forceResolvers;\n}","map":{"version":3,"names":["BREAK","visit","hasForcedResolvers","document","forceResolvers","Directive","enter","node","name","value","arguments","some","arg","kind"],"sources":["/home/saurabh-shukla/Desktop/Slack Lite/frontend/node_modules/@apollo/src/utilities/internal/hasForcedResolvers.ts"],"sourcesContent":["import type { ASTNode } from \"graphql\";\nimport { BREAK, visit } from \"graphql\";\n\nexport function hasForcedResolvers(document: ASTNode) {\n  let forceResolvers = false;\n  visit(document, {\n    Directive: {\n      enter(node) {\n        if (node.name.value === \"client\" && node.arguments) {\n          forceResolvers = node.arguments.some(\n            (arg) =>\n              arg.name.value === \"always\" &&\n              arg.value.kind === \"BooleanValue\" &&\n              arg.value.value === true\n          );\n          if (forceResolvers) {\n            return BREAK;\n          }\n        }\n      },\n    },\n  });\n  return forceResolvers;\n}\n"],"mappings":"AACA,SAASA,KAAK,EAAEC,KAAK,QAAQ,SAAS;AAEtC,OAAM,SAAUC,kBAAkBA,CAACC,QAAiB;EAClD,IAAIC,cAAc,GAAG,KAAK;EAC1BH,KAAK,CAACE,QAAQ,EAAE;IACdE,SAAS,EAAE;MACTC,KAAKA,CAACC,IAAI;QACR,IAAIA,IAAI,CAACC,IAAI,CAACC,KAAK,KAAK,QAAQ,IAAIF,IAAI,CAACG,SAAS,EAAE;UAClDN,cAAc,GAAGG,IAAI,CAACG,SAAS,CAACC,IAAI,CACjCC,GAAG,IACFA,GAAG,CAACJ,IAAI,CAACC,KAAK,KAAK,QAAQ,IAC3BG,GAAG,CAACH,KAAK,CAACI,IAAI,KAAK,cAAc,IACjCD,GAAG,CAACH,KAAK,CAACA,KAAK,KAAK,IAAI,CAC3B;UACD,IAAIL,cAAc,EAAE;YAClB,OAAOJ,KAAK;UACd;QACF;MACF;;GAEH,CAAC;EACF,OAAOI,cAAc;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}