{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8081/api/auth';\nconst authService = {\n  login: async (username, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/login`, {\n        username,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Login failed';\n    }\n  },\n  validateToken: async token => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/verify`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Token validation failed';\n    }\n  }\n};\nexport default authService;","map":{"version":3,"names":["axios","API_BASE_URL","authService","login","username","password","response","post","data","error","_error$response","validateToken","token","get","headers","_error$response2"],"sources":["/home/saurabh-shukla/Desktop/Slack Lite/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8081/api/auth';\n\nconst authService = {\n    login: async (username, password) => {\n        try {\n            const response = await axios.post(`${API_BASE_URL}/login`, {\n                username,\n                password\n            });\n            return response.data;\n        } catch (error) {\n            throw error.response?.data || 'Login failed';\n        }\n    },\n\n    validateToken: async (token) => {\n        try {\n            const response = await axios.get(`${API_BASE_URL}/verify`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n            return response.data;\n        } catch (error) {\n            throw error.response?.data || 'Token validation failed';\n        }\n    }\n};\n\nexport default authService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,gCAAgC;AAErD,MAAMC,WAAW,GAAG;EAChBC,KAAK,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGN,YAAY,QAAQ,EAAE;QACvDG,QAAQ;QACRC;MACJ,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACZ,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI,cAAc;IAChD;EACJ,CAAC;EAEDG,aAAa,EAAE,MAAOC,KAAK,IAAK;IAC5B,IAAI;MACA,MAAMN,QAAQ,GAAG,MAAMN,KAAK,CAACa,GAAG,CAAC,GAAGZ,YAAY,SAAS,EAAE;QACvDa,OAAO,EAAE;UACL,eAAe,EAAE,UAAUF,KAAK;QACpC;MACJ,CAAC,CAAC;MACF,OAAON,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAM,gBAAA;MACZ,MAAM,EAAAA,gBAAA,GAAAN,KAAK,CAACH,QAAQ,cAAAS,gBAAA,uBAAdA,gBAAA,CAAgBP,IAAI,KAAI,yBAAyB;IAC3D;EACJ;AACJ,CAAC;AAED,eAAeN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}