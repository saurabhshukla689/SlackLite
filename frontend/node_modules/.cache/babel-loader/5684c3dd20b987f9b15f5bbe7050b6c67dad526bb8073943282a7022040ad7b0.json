{"ast":null,"code":"import { invariant } from \"@apollo/client/utilities/invariant\";\n/**\n* @internal\n* \n* @deprecated This is an internal API and should not be used directly. This can be removed or changed at any time.\n*/\nexport function getFragmentDefinition(doc) {\n  invariant(doc.kind === \"Document\", 6);\n  invariant(doc.definitions.length <= 1, 7);\n  const fragmentDef = doc.definitions[0];\n  invariant(fragmentDef.kind === \"FragmentDefinition\", 8);\n  return fragmentDef;\n}","map":{"version":3,"names":["invariant","getFragmentDefinition","doc","kind","definitions","length","fragmentDef"],"sources":["/home/saurabh-shukla/Desktop/Slack Lite/frontend/node_modules/@apollo/src/utilities/internal/getFragmentDefinition.ts"],"sourcesContent":["import type { DocumentNode, FragmentDefinitionNode } from \"graphql\";\n\nimport { invariant } from \"@apollo/client/utilities/invariant\";\n\n/** @internal */\nexport function getFragmentDefinition(\n  doc: DocumentNode\n): FragmentDefinitionNode {\n  invariant(\n    doc.kind === \"Document\",\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`\n  );\n\n  invariant(\n    doc.definitions.length <= 1,\n    \"Fragment must have exactly one definition.\"\n  );\n\n  const fragmentDef = doc.definitions[0] as FragmentDefinitionNode;\n\n  invariant(\n    fragmentDef.kind === \"FragmentDefinition\",\n    \"Must be a fragment definition.\"\n  );\n\n  return fragmentDef as FragmentDefinitionNode;\n}\n"],"mappings":"AAEA,SAASA,SAAT,QAA0B,oCAAoC;;;;;;AAG9D,gBAAgBC,qBAAqBA,CACnCC,GAAiB,EADnB;EAGEF,SAAF,CACIE,GAAG,CAACC,IADR,KACiB,UADjB,IAIG;EAEDH,SAAF,CACIE,GAAG,CAACE,WAAW,CAACC,MADpB,IAC8B,KAE3B;EAED,MAAMC,WAAR,GAAsBJ,GAAG,CAACE,WAAW,CAAC,CAAC,CAA2B;EAEhEJ,SAAF,CACIM,WAAW,CAACH,IADhB,KACyB,oBADzB,IAGG;EAED,OAAOG,WAAqC;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}