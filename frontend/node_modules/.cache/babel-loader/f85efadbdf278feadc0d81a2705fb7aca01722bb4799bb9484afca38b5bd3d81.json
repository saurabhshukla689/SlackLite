{"ast":null,"code":"import { __DEV__ } from \"@apollo/client/utilities/environment\";\nimport { isNonNullObject } from \"./isNonNullObject.js\";\n/**\n* @internal only to be imported in tests\n* \n* @deprecated This is an internal API and should not be used directly. This can be removed or changed at any time.\n*/\nexport function deepFreeze(value) {\n  const workSet = new Set([value]);\n  workSet.forEach(obj => {\n    if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n      Object.getOwnPropertyNames(obj).forEach(name => {\n        if (isNonNullObject(obj[name])) workSet.add(obj[name]);\n      });\n    }\n  });\n  return value;\n}\nfunction shallowFreeze(obj) {\n  if (__DEV__ && !Object.isFrozen(obj)) {\n    try {\n      Object.freeze(obj);\n    } catch (e) {\n      // Some types like Uint8Array and Node.js's Buffer cannot be frozen, but\n      // they all throw a TypeError when you try, so we re-throw any exceptions\n      // that are not TypeErrors, since that would be unexpected.\n      if (e instanceof TypeError) return null;\n      throw e;\n    }\n  }\n  return obj;\n}","map":{"version":3,"names":["__DEV__","isNonNullObject","deepFreeze","value","workSet","Set","forEach","obj","shallowFreeze","Object","getOwnPropertyNames","name","add","isFrozen","freeze","e","TypeError"],"sources":["/home/saurabh-shukla/Desktop/Slack Lite/frontend/node_modules/@apollo/src/utilities/internal/deepFreeze.ts"],"sourcesContent":["import { __DEV__ } from \"@apollo/client/utilities/environment\";\n\nimport { isNonNullObject } from \"./isNonNullObject.js\";\n\n/** @internal only to be imported in tests */\nexport function deepFreeze(value: any) {\n  const workSet = new Set([value]);\n  workSet.forEach((obj) => {\n    if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n      Object.getOwnPropertyNames(obj).forEach((name) => {\n        if (isNonNullObject(obj[name])) workSet.add(obj[name]);\n      });\n    }\n  });\n  return value;\n}\n\nfunction shallowFreeze<T extends object>(obj: T): T | null {\n  if (__DEV__ && !Object.isFrozen(obj)) {\n    try {\n      Object.freeze(obj);\n    } catch (e) {\n      // Some types like Uint8Array and Node.js's Buffer cannot be frozen, but\n      // they all throw a TypeError when you try, so we re-throw any exceptions\n      // that are not TypeErrors, since that would be unexpected.\n      if (e instanceof TypeError) return null;\n      throw e;\n    }\n  }\n  return obj;\n}\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,sCAAsC;AAE9D,SAASC,eAAT,QAAgC,sBAAsB;;;;;;AAGtD,gBAAgBC,UAAUA,CAACC,KAAU,EAArC;EACE,MAAMC,OAAR,GAAkB,IAAIC,GAAG,CAAC,CAACF,KAAK,CAAC,CAAC;EAChCC,OAAO,CAACE,OAAO,CAAEC,GAAG,IAAtB;IACI,IAAIN,eAAe,CAACM,GAAG,KAAKC,aAAa,CAACD,GAAG,MAAMA,GAAG,EAAE;MACtDE,MAAM,CAACC,mBAAmB,CAACH,GAAG,CAAC,CAACD,OAAO,CAAEK,IAAI,IAAnD;QACQ,IAAIV,eAAe,CAACM,GAAG,CAACI,IAAI,CAAC,CAAC,EAAEP,OAAO,CAACQ,GAAG,CAACL,GAAG,CAACI,IAAI,CAAC,CAAC;MACxD,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EACF,OAAOR,KAAK;AACd;AAEA,SAASK,aAAaA,CAAmBD,GAAM,EAA/C;EACE,IAAIP,OAAN,IAAiB,CAACS,MAAM,CAACI,QAAQ,CAACN,GAAG,CAAC,EAAE;IACpC,IAAI;MACFE,MAAM,CAACK,MAAM,CAACP,GAAG,CAAC;IACpB,EAAE,OAAOQ,CAAC,EAAE;MACV;MACA;MACA;MACA,IAAIA,CAAA,YAAaC,SAAS,EAAE,OAAO,IAAI;MACvC,MAAMD,CAAC;IACT;EACF;EACA,OAAOR,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}