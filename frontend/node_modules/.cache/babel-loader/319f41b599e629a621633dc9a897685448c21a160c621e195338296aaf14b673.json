{"ast":null,"code":"import { ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:8080/graphql'\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem('token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nexport default client;","map":{"version":3,"names":["ApolloClient","InMemoryCache","createHttpLink","setContext","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache"],"sources":["/home/saurabh-shukla/Desktop/Slack Lite/frontend/src/apollo/client.js"],"sourcesContent":["import { ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nconst httpLink = createHttpLink({\n    uri: 'http://localhost:8080/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n    const token = localStorage.getItem('token');\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : \"\",\n        }\n    }\n});\n\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n});\n\nexport default client;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,EAAEC,cAAc,QAAQ,gBAAgB;AAC5E,SAASC,UAAU,QAAQ,6BAA6B;AAExD,MAAMC,QAAQ,GAAGF,cAAc,CAAC;EAC5BG,GAAG,EAAE;AACT,CAAC,CAAC;AAEF,MAAMC,QAAQ,GAAGH,UAAU,CAAC,CAACI,CAAC,EAAE;EAAEC;AAAQ,CAAC,KAAK;EAC5C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAO;IACHH,OAAO,EAAE;MACL,GAAGA,OAAO;MACVI,aAAa,EAAEH,KAAK,GAAG,UAAUA,KAAK,EAAE,GAAG;IAC/C;EACJ,CAAC;AACL,CAAC,CAAC;AAEF,MAAMI,MAAM,GAAG,IAAIb,YAAY,CAAC;EAC5Bc,IAAI,EAAER,QAAQ,CAACS,MAAM,CAACX,QAAQ,CAAC;EAC/BY,KAAK,EAAE,IAAIf,aAAa,CAAC;AAC7B,CAAC,CAAC;AAEF,eAAeY,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}