{"ast":null,"code":"/**\n* Utility function that takes a list of fragment definitions and makes a hash out of them\n* that maps the name of the fragment to the fragment definition.\n*\n* @internal\n* \n* @deprecated This is an internal API and should not be used directly. This can be removed or changed at any time.\n*/\nexport function createFragmentMap(fragments = []) {\n  const symTable = {};\n  fragments.forEach(fragment => {\n    symTable[fragment.name.value] = fragment;\n  });\n  return symTable;\n}","map":{"version":3,"names":["createFragmentMap","fragments","symTable","forEach","fragment","name","value"],"sources":["/home/saurabh-shukla/Desktop/Slack Lite/frontend/node_modules/@apollo/src/utilities/internal/createFragmentMap.ts"],"sourcesContent":["import type { FragmentDefinitionNode } from \"graphql\";\n\nimport type { FragmentMap } from \"./types/FragmentMap.js\";\n\n/**\n * Utility function that takes a list of fragment definitions and makes a hash out of them\n * that maps the name of the fragment to the fragment definition.\n *\n * @internal\n */\nexport function createFragmentMap(\n  fragments: FragmentDefinitionNode[] = []\n): FragmentMap {\n  const symTable: FragmentMap = {};\n  fragments.forEach((fragment) => {\n    symTable[fragment.name.value] = fragment;\n  });\n  return symTable;\n}\n"],"mappings":";;;;;;;;AAUA,gBAAgBA,iBAAiBA,CAC/BC,SADF,GACwC,EAAE,EAD1C;EAGE,MAAMC,QAAR,GAAgC,CAAhC,CAAkC;EAChCD,SAAS,CAACE,OAAO,CAAEC,QAAQ,IAA7B;IACIF,QAAQ,CAACE,QAAQ,CAACC,IAAI,CAACC,KAAK,IAAIF,QAAQ;EAC1C,CAAC,CAAC;EACF,OAAOF,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}