{"ast":null,"code":"export { getSuspenseCache } from \"./cache/getSuspenseCache.js\";\nexport { assertWrappedQueryRef, getWrappedPromise, InternalQueryReference, unwrapQueryRef, updateWrappedQueryRef, wrapQueryRef } from \"./cache/QueryReference.js\";\nexport const wrapperSymbol = Symbol.for(\"apollo.hook.wrappers\");","map":{"version":3,"names":["getSuspenseCache","assertWrappedQueryRef","getWrappedPromise","InternalQueryReference","unwrapQueryRef","updateWrappedQueryRef","wrapQueryRef","wrapperSymbol","Symbol","for"],"sources":["/home/saurabh-shukla/Desktop/Slack Lite/frontend/node_modules/@apollo/src/react/internal/index.ts"],"sourcesContent":["import type { InternalTypes as ReactInternalTypes } from \"@apollo/client/react\";\nexport { getSuspenseCache } from \"./cache/getSuspenseCache.js\";\nexport type { CacheKey, FragmentKey, QueryKey } from \"./cache/types.js\";\nexport type { PreloadedQueryRef, QueryRef } from \"./cache/QueryReference.js\";\nexport {\n  assertWrappedQueryRef,\n  getWrappedPromise,\n  InternalQueryReference,\n  unwrapQueryRef,\n  updateWrappedQueryRef,\n  wrapQueryRef,\n} from \"./cache/QueryReference.js\";\nexport type { SuspenseCacheOptions } from \"./cache/SuspenseCache.js\";\nexport type HookWrappers = ReactInternalTypes.HookWrappers;\nexport const wrapperSymbol = Symbol.for(\"apollo.hook.wrappers\");\nexport type { FetchMoreFunction, RefetchFunction } from \"./types.js\";\n"],"mappings":"AACA,SAASA,gBAAgB,QAAQ,6BAA6B;AAG9D,SACEC,qBAAqB,EACrBC,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,EACdC,qBAAqB,EACrBC,YAAY,QACP,2BAA2B;AAGlC,OAAO,MAAMC,aAAa,GAAGC,MAAM,CAACC,GAAG,CAAC,sBAAsB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}