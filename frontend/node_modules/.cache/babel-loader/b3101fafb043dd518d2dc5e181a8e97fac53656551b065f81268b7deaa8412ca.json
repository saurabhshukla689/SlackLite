{"ast":null,"code":"import { isPlainObject } from \"./isPlainObject.js\";\n/**\n* @internal\n* \n* @deprecated This is an internal API and should not be used directly. This can be removed or changed at any time.\n*/\nexport function omitDeep(value, key) {\n  return __omitDeep(value, key);\n}\nfunction __omitDeep(value, key, known = new Map()) {\n  if (known.has(value)) {\n    return known.get(value);\n  }\n  let modified = false;\n  if (Array.isArray(value)) {\n    const array = [];\n    known.set(value, array);\n    value.forEach((value, index) => {\n      const result = __omitDeep(value, key, known);\n      modified ||= result !== value;\n      array[index] = result;\n    });\n    if (modified) {\n      return array;\n    }\n  } else if (isPlainObject(value)) {\n    const obj = Object.create(Object.getPrototypeOf(value));\n    known.set(value, obj);\n    Object.keys(value).forEach(k => {\n      if (k === key) {\n        modified = true;\n        return;\n      }\n      const result = __omitDeep(value[k], key, known);\n      modified ||= result !== value[k];\n      obj[k] = result;\n    });\n    if (modified) {\n      return obj;\n    }\n  }\n  return value;\n}","map":{"version":3,"names":["isPlainObject","omitDeep","value","key","__omitDeep","known","Map","has","get","modified","Array","isArray","array","set","forEach","index","result","obj","Object","create","getPrototypeOf","keys","k"],"sources":["/home/saurabh-shukla/Desktop/Slack Lite/frontend/node_modules/@apollo/src/utilities/internal/omitDeep.ts"],"sourcesContent":["import { isPlainObject } from \"./isPlainObject.js\";\nimport type { DeepOmit } from \"./types/DeepOmit.js\";\n\n/** @internal */\nexport function omitDeep<T, K extends string>(value: T, key: K) {\n  return __omitDeep(value, key);\n}\n\nfunction __omitDeep<T, K extends string>(\n  value: T,\n  key: K,\n  known = new Map<any, any>()\n): DeepOmit<T, K> {\n  if (known.has(value)) {\n    return known.get(value);\n  }\n\n  let modified = false;\n\n  if (Array.isArray(value)) {\n    const array: any[] = [];\n    known.set(value, array);\n\n    value.forEach((value, index) => {\n      const result = __omitDeep(value, key, known);\n      modified ||= result !== value;\n\n      array[index] = result;\n    });\n\n    if (modified) {\n      return array as DeepOmit<T, K>;\n    }\n  } else if (isPlainObject(value)) {\n    const obj = Object.create(Object.getPrototypeOf(value));\n    known.set(value, obj);\n\n    Object.keys(value).forEach((k) => {\n      if (k === key) {\n        modified = true;\n        return;\n      }\n\n      const result = __omitDeep(value[k], key, known);\n      modified ||= result !== value[k];\n\n      obj[k] = result;\n    });\n\n    if (modified) {\n      return obj;\n    }\n  }\n\n  return value as DeepOmit<T, K>;\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAAoB;;;;;;AAIlD,gBAAgBC,QAAQA,CAAsBC,KAAQ,EAAEC,GAAM,EAA9D;EACE,OAAOC,UAAU,CAACF,KAAK,EAAEC,GAAG,CAAC;AAC/B;AAEA,SAASC,UAAUA,CACjBF,KAAQ,EACRC,GAAM,EACNE,KAHF,GAGU,IAAIC,GAAG,CAHjB,CAG6B,EAH7B;EAKE,IAAID,KAAK,CAACE,GAAG,CAACL,KAAK,CAAC,EAAE;IACpB,OAAOG,KAAK,CAACG,GAAG,CAACN,KAAK,CAAC;EACzB;EAEA,IAAIO,QAAN,GAAiB,KAAK;EAEpB,IAAIC,KAAK,CAACC,OAAO,CAACT,KAAK,CAAC,EAAE;IACxB,MAAMU,KAAV,GAAyB,EAAE;IACvBP,KAAK,CAACQ,GAAG,CAACX,KAAK,EAAEU,KAAK,CAAC;IAEvBV,KAAK,CAACY,OAAO,CAAC,CAACZ,KAAK,EAAEa,KAAK,KAA/B;MACM,MAAMC,MAAZ,GAAqBZ,UAAU,CAACF,KAAK,EAAEC,GAAG,EAAEE,KAAK,CAAC;MAC5CI,QAAN,KAAmBO,MAAnB,KAA8Bd,KAAK;MAE7BU,KAAK,CAACG,KAAK,IAAIC,MAAM;IACvB,CAAC,CAAC;IAEF,IAAIP,QAAQ,EAAE;MACZ,OAAOG,KAAuB;IAChC;EACF,OAAO,IAAIZ,aAAa,CAACE,KAAK,CAAC,EAAE;IAC/B,MAAMe,GAAV,GAAgBC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,cAAc,CAAClB,KAAK,CAAC,CAAC;IACvDG,KAAK,CAACQ,GAAG,CAACX,KAAK,EAAEe,GAAG,CAAC;IAErBC,MAAM,CAACG,IAAI,CAACnB,KAAK,CAAC,CAACY,OAAO,CAAEQ,CAAC,IAAjC;MACM,IAAIA,CAAA,KAAMnB,GAAG,EAAE;QACbM,QAAR,GAAmB,IAAI;QACf;MACF;MAEA,MAAMO,MAAZ,GAAqBZ,UAAU,CAACF,KAAK,CAACoB,CAAC,CAAC,EAAEnB,GAAG,EAAEE,KAAK,CAAC;MAC/CI,QAAN,KAAmBO,MAAnB,KAA8Bd,KAAK,CAACoB,CAAC,CAAC;MAEhCL,GAAG,CAACK,CAAC,IAAIN,MAAM;IACjB,CAAC,CAAC;IAEF,IAAIP,QAAQ,EAAE;MACZ,OAAOQ,GAAG;IACZ;EACF;EAEA,OAAOf,KAAuB;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}