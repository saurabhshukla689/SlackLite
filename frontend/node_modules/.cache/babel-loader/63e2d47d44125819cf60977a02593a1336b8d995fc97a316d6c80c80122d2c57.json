{"ast":null,"code":"import * as React from \"react\";\nimport { invariant } from \"@apollo/client/utilities/invariant\";\nimport { getApolloContext } from \"../context/ApolloContext.js\";\n/**\n * @example\n *\n * ```jsx\n * import { useApolloClient } from \"@apollo/client\";\n *\n * function SomeComponent() {\n *   const client = useApolloClient();\n *   // `client` is now set to the `ApolloClient` instance being used by the\n *   // application (that was configured using something like `ApolloProvider`)\n * }\n * ```\n *\n * @returns The `ApolloClient` instance being used by the application.\n */\nexport function useApolloClient(override) {\n  const context = React.useContext(getApolloContext());\n  const client = override || context.client;\n  invariant(!!client, 28);\n  return client;\n}","map":{"version":3,"names":["React","invariant","getApolloContext","useApolloClient","override","context","useContext","client"],"sources":["/home/saurabh-shukla/Desktop/Slack Lite/frontend/node_modules/@apollo/src/react/hooks/useApolloClient.ts"],"sourcesContent":["import * as React from \"react\";\n\nimport type { ApolloClient } from \"@apollo/client\";\nimport { invariant } from \"@apollo/client/utilities/invariant\";\n\nimport { getApolloContext } from \"../context/ApolloContext.js\";\n\n/**\n * @example\n *\n * ```jsx\n * import { useApolloClient } from \"@apollo/client\";\n *\n * function SomeComponent() {\n *   const client = useApolloClient();\n *   // `client` is now set to the `ApolloClient` instance being used by the\n *   // application (that was configured using something like `ApolloProvider`)\n * }\n * ```\n *\n * @returns The `ApolloClient` instance being used by the application.\n */\nexport function useApolloClient(override?: ApolloClient): ApolloClient {\n  const context = React.useContext(getApolloContext());\n  const client = override || context.client;\n  invariant(\n    !!client,\n    'Could not find \"client\" in the context or passed in as an option. ' +\n      \"Wrap the root component in an <ApolloProvider>, or pass an ApolloClient \" +\n      \"instance in via options.\"\n  );\n\n  return client;\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAO;AAG9B,SAASC,SAAT,QAA0B,oCAAoC;AAE9D,SAASC,gBAAT,QAAiC,6BAA6B;AAE9D;;;;;;;;;;;;;;;AAeA,gBAAgBC,eAAeA,CAACC,QAAuB,EAAvD;EACE,MAAMC,OAAR,GAAkBL,KAAK,CAACM,UAAU,CAACJ,gBAAgB,CAAnD,CAAqD,CAAC;EACpD,MAAMK,MAAR,GAAiBH,QAAjB,IAA6BC,OAAO,CAACE,MAAM;EACzCN,SAAF,CACI,CAAC,CAACM,MADN,KAKG;EAED,OAAOA,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}