{"ast":null,"code":"export { ApolloCache } from \"./core/cache.js\";\nexport { MissingFieldError } from \"./core/types/common.js\";\nexport { canonicalStringify, isReference } from \"@apollo/client/utilities\";\nexport { EntityStore } from \"./inmemory/entityStore.js\";\nexport { defaultDataIdFromObject, fieldNameFromStoreName } from \"./inmemory/helpers.js\";\nexport { InMemoryCache } from \"./inmemory/inMemoryCache.js\";\nexport { cacheSlot, makeVar } from \"./inmemory/reactiveVars.js\";\nexport { Policies } from \"./inmemory/policies.js\";\nexport { createFragmentRegistry } from \"./inmemory/fragmentRegistry.js\";","map":{"version":3,"names":["ApolloCache","MissingFieldError","canonicalStringify","isReference","EntityStore","defaultDataIdFromObject","fieldNameFromStoreName","InMemoryCache","cacheSlot","makeVar","Policies","createFragmentRegistry"],"sources":["/home/saurabh-shukla/Desktop/Slack Lite/frontend/node_modules/@apollo/src/cache/index.ts"],"sourcesContent":["export type { Transaction } from \"./core/cache.js\";\nexport type {\n  WatchFragmentOptions,\n  WatchFragmentResult,\n} from \"./deprecated.js\";\nexport { ApolloCache } from \"./core/cache.js\";\nexport type { Cache } from \"./core/types/Cache.js\";\nexport type {\n  IgnoreModifier,\n  MissingTree,\n  Modifier,\n  ModifierDetails,\n  Modifiers,\n  ReadFieldOptions,\n} from \"./core/types/common.js\";\nexport { MissingFieldError } from \"./core/types/common.js\";\n\nexport type { Reference } from \"@apollo/client/utilities\";\nexport { canonicalStringify, isReference } from \"@apollo/client/utilities\";\n\nexport { EntityStore } from \"./inmemory/entityStore.js\";\nexport {\n  defaultDataIdFromObject,\n  fieldNameFromStoreName,\n} from \"./inmemory/helpers.js\";\n\nexport { InMemoryCache } from \"./inmemory/inMemoryCache.js\";\n\nexport type { ReactiveVar } from \"./inmemory/reactiveVars.js\";\nexport { cacheSlot, makeVar } from \"./inmemory/reactiveVars.js\";\n\nexport type {\n  FieldFunctionOptions,\n  FieldMergeFunction,\n  FieldPolicy,\n  FieldReadFunction,\n  PossibleTypesMap,\n  TypePolicies,\n  TypePolicy,\n} from \"./inmemory/policies.js\";\nexport { Policies } from \"./inmemory/policies.js\";\n\nexport type { FragmentRegistryAPI } from \"./inmemory/fragmentRegistry.js\";\nexport { createFragmentRegistry } from \"./inmemory/fragmentRegistry.js\";\n\nexport type {\n  ApolloReducerConfig,\n  DiffQueryAgainstStoreOptions,\n  IdGetter,\n  IdGetterObj,\n  InMemoryCacheConfig,\n  MergeInfo,\n  MergeTree,\n  NormalizedCache,\n  NormalizedCacheObject,\n  OptimisticStoreItem,\n  ReadMergeModifyContext,\n  ReadQueryOptions,\n  StoreObject,\n  StoreValue,\n} from \"./inmemory/types.js\";\n"],"mappings":"AAKA,SAASA,WAAW,QAAQ,iBAAiB;AAU7C,SAASC,iBAAiB,QAAQ,wBAAwB;AAG1D,SAASC,kBAAkB,EAAEC,WAAW,QAAQ,0BAA0B;AAE1E,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SACEC,uBAAuB,EACvBC,sBAAsB,QACjB,uBAAuB;AAE9B,SAASC,aAAa,QAAQ,6BAA6B;AAG3D,SAASC,SAAS,EAAEC,OAAO,QAAQ,4BAA4B;AAW/D,SAASC,QAAQ,QAAQ,wBAAwB;AAGjD,SAASC,sBAAsB,QAAQ,gCAAgC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}