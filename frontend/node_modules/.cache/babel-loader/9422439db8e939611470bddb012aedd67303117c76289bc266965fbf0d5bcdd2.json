{"ast":null,"code":"import { invariant } from \"@apollo/client/utilities/invariant\";\n/**\n* @internal\n* \n* @deprecated This is an internal API and should not be used directly. This can be removed or changed at any time.\n*/\nexport function getFragmentFromSelection(selection, fragmentMap) {\n  switch (selection.kind) {\n    case \"InlineFragment\":\n      return selection;\n    case \"FragmentSpread\":\n      {\n        const fragmentName = selection.name.value;\n        if (typeof fragmentMap === \"function\") {\n          return fragmentMap(fragmentName);\n        }\n        const fragment = fragmentMap && fragmentMap[fragmentName];\n        invariant(fragment, 9, fragmentName);\n        return fragment || null;\n      }\n    default:\n      return null;\n  }\n}","map":{"version":3,"names":["invariant","getFragmentFromSelection","selection","fragmentMap","kind","fragmentName","name","value","fragment"],"sources":["/home/saurabh-shukla/Desktop/Slack Lite/frontend/node_modules/@apollo/src/utilities/internal/getFragmentFromSelection.ts"],"sourcesContent":["import type {\n  FragmentDefinitionNode,\n  InlineFragmentNode,\n  SelectionNode,\n} from \"graphql\";\n\nimport { invariant } from \"@apollo/client/utilities/invariant\";\n\nimport type { FragmentMap } from \"./types/FragmentMap.js\";\nimport type { FragmentMapFunction } from \"./types/FragmentMapFunction.js\";\n\n/** @internal */\nexport function getFragmentFromSelection(\n  selection: SelectionNode,\n  fragmentMap?: FragmentMap | FragmentMapFunction\n): InlineFragmentNode | FragmentDefinitionNode | null {\n  switch (selection.kind) {\n    case \"InlineFragment\":\n      return selection;\n    case \"FragmentSpread\": {\n      const fragmentName = selection.name.value;\n      if (typeof fragmentMap === \"function\") {\n        return fragmentMap(fragmentName);\n      }\n      const fragment = fragmentMap && fragmentMap[fragmentName];\n      invariant(fragment, `No fragment named %s`, fragmentName);\n      return fragment || null;\n    }\n    default:\n      return null;\n  }\n}\n"],"mappings":"AAMA,SAASA,SAAT,QAA0B,oCAAoC;;;;;;AAM9D,gBAAgBC,wBAAwBA,CACtCC,SAAwB,EACxBC,WAA+C,EAFjD;EAIE,QAAQD,SAAS,CAACE,IAAI;IACpB,KAAK,gBAAgB;MACnB,OAAOF,SAAS;IAClB,KAAK,gBAAgB;MAAE;QACrB,MAAMG,YAAZ,GAA2BH,SAAS,CAACI,IAAI,CAACC,KAAK;QACzC,IAAI,OAAOJ,WAAjB,KAAiC,UAAU,EAAE;UACrC,OAAOA,WAAW,CAACE,YAAY,CAAC;QAClC;QACA,MAAMG,QAAZ,GAAuBL,WAAvB,IAAsCA,WAAW,CAACE,YAAY,CAAC;QACzDL,SAAN,CAAgBQ,QAAhB,KAAkDH,YAAlD,CAA+D;QACzD,OAAOG,QAAb,IAAyB,IAAI;MACzB;IACA;MACE,OAAO,IAAI;EACf;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}