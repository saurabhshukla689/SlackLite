{"ast":null,"code":"import { compact } from \"./compact.js\";\n/**\n* @internal\n* \n* @deprecated This is an internal API and should not be used directly. This can be removed or changed at any time.\n*/\nexport function mergeOptions(defaults, options) {\n  return compact(defaults, options, options.variables && {\n    variables: compact({\n      ...(defaults && defaults.variables),\n      ...options.variables\n    })\n  });\n}","map":{"version":3,"names":["compact","mergeOptions","defaults","options","variables"],"sources":["/home/saurabh-shukla/Desktop/Slack Lite/frontend/node_modules/@apollo/src/utilities/internal/mergeOptions.ts"],"sourcesContent":["import type { ApolloClient, OperationVariables } from \"@apollo/client\";\n\nimport { compact } from \"./compact.js\";\n\ntype OptionsUnion<TData, TVariables extends OperationVariables> =\n  | ApolloClient.WatchQueryOptions<TData, TVariables>\n  | ApolloClient.QueryOptions<TData, TVariables>\n  | ApolloClient.MutateOptions<TData, TVariables, any>;\n\n/** @internal */\nexport function mergeOptions<\n  TDefaultOptions extends Partial<OptionsUnion<any, any>>,\n  TOptions extends TDefaultOptions,\n>(\n  defaults: TDefaultOptions | Partial<TDefaultOptions> | undefined,\n  options: TOptions | Partial<TOptions>\n): TOptions & TDefaultOptions {\n  return compact(\n    defaults,\n    options,\n    options.variables && {\n      variables: compact({\n        ...(defaults && defaults.variables),\n        ...options.variables,\n      }),\n    }\n  );\n}\n"],"mappings":"AAEA,SAASA,OAAT,QAAwB,cAAc;;;;;;AAQtC,gBAAgBC,YAAYA,CAI1BC,QAAgE,EAChEC,OAAqC,EALvC;EAOE,OAAOH,OAAO,CACZE,QAAQ,EACRC,OAAO,EACPA,OAAO,CAACC,SAHZ,IAGyB;IACnBA,SAAS,EAAEJ,OAAO,CAAC;MACjB,IAAIE,QAAZ,IAAwBA,QAAQ,CAACE,SAAS,CAAC;MACnC,GAAGD,OAAO,CAACC;IACnB,CAAO;EACP,CAAK,CACF;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}