{"ast":null,"code":"function isDecoratedPromise(promise) {\n  return \"status\" in promise;\n}\n/**\n* @internal\n* \n* @deprecated This is an internal API and should not be used directly. This can be removed or changed at any time.\n*/\nexport function decoratePromise(promise) {\n  if (isDecoratedPromise(promise)) {\n    return promise;\n  }\n  const pendingPromise = promise;\n  pendingPromise.status = \"pending\";\n  pendingPromise.then(value => {\n    if (pendingPromise.status === \"pending\") {\n      const fulfilledPromise = pendingPromise;\n      fulfilledPromise.status = \"fulfilled\";\n      fulfilledPromise.value = value;\n    }\n  }, reason => {\n    if (pendingPromise.status === \"pending\") {\n      const rejectedPromise = pendingPromise;\n      rejectedPromise.status = \"rejected\";\n      rejectedPromise.reason = reason;\n    }\n  });\n  return promise;\n}","map":{"version":3,"names":["isDecoratedPromise","promise","decoratePromise","pendingPromise","status","then","value","fulfilledPromise","reason","rejectedPromise"],"sources":["/home/saurabh-shukla/Desktop/Slack Lite/frontend/node_modules/@apollo/src/utilities/internal/decoratePromise.ts"],"sourcesContent":["import type { DecoratedPromise } from \"./types/DecoratedPromise.js\";\nimport type { FulfilledPromise } from \"./types/FulfilledPromise.js\";\nimport type { PendingPromise } from \"./types/PendingPromise.js\";\nimport type { RejectedPromise } from \"./types/RejectedPromise.js\";\n\nfunction isDecoratedPromise<TValue>(\n  promise: Promise<TValue>\n): promise is DecoratedPromise<TValue> {\n  return \"status\" in promise;\n}\n\n/** @internal */\nexport function decoratePromise<TValue>(\n  promise: Promise<TValue>\n): DecoratedPromise<TValue> {\n  if (isDecoratedPromise(promise)) {\n    return promise;\n  }\n\n  const pendingPromise = promise as PendingPromise<TValue>;\n  pendingPromise.status = \"pending\";\n\n  pendingPromise.then(\n    (value) => {\n      if (pendingPromise.status === \"pending\") {\n        const fulfilledPromise =\n          pendingPromise as unknown as FulfilledPromise<TValue>;\n\n        fulfilledPromise.status = \"fulfilled\";\n        fulfilledPromise.value = value;\n      }\n    },\n    (reason: unknown) => {\n      if (pendingPromise.status === \"pending\") {\n        const rejectedPromise =\n          pendingPromise as unknown as RejectedPromise<TValue>;\n\n        rejectedPromise.status = \"rejected\";\n        rejectedPromise.reason = reason;\n      }\n    }\n  );\n\n  return promise as DecoratedPromise<TValue>;\n}\n"],"mappings":"AAKA,SAASA,kBAAkBA,CACzBC,OAAwB,EAD1B;EAGE,OAAO,QAAT,IAAqBA,OAAO;AAC5B;;;;;;AAGA,gBAAgBC,eAAeA,CAC7BD,OAAwB,EAD1B;EAGE,IAAID,kBAAkB,CAACC,OAAO,CAAC,EAAE;IAC/B,OAAOA,OAAO;EAChB;EAEA,MAAME,cAAR,GAAyBF,OAAiC;EACxDE,cAAc,CAACC,MAAjB,GAA0B,SAAS;EAEjCD,cAAc,CAACE,IAAI,CAChBC,KAAK,IADV;IAEM,IAAIH,cAAc,CAACC,MAAzB,KAAoC,SAAS,EAAE;MACvC,MAAMG,gBAAd,GACUJ,cAAqD;MAEvDI,gBAAgB,CAACH,MAAzB,GAAkC,WAAW;MACrCG,gBAAgB,CAACD,KAAzB,GAAiCA,KAAK;IAChC;EACF,CAAC,EACAE,MAAe,IADpB;IAEM,IAAIL,cAAc,CAACC,MAAzB,KAAoC,SAAS,EAAE;MACvC,MAAMK,eAAd,GACUN,cAAoD;MAEtDM,eAAe,CAACL,MAAxB,GAAiC,UAAU;MACnCK,eAAe,CAACD,MAAxB,GAAiCA,MAAM;IACjC;EACF,CAAC,CACF;EAED,OAAOP,OAAmC;AAC5C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}