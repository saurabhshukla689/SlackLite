{"ast":null,"code":"// This file is used by the error message display website and the\n// @apollo/client/includeErrors entry point.\n// This file is not meant to be imported manually.\nexport const errorCodes = {\n  1: {\n    file: \"@apollo/client/utilities/internal/checkDocument.js\",\n    condition: \"doc && doc.kind === \\\"Document\\\"\",\n    message: `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`\n  },\n  2: {\n    file: \"@apollo/client/utilities/internal/checkDocument.js\",\n    message: `Schema type definitions not allowed in queries. Found: \"%s\"`\n  },\n  3: {\n    file: \"@apollo/client/utilities/internal/checkDocument.js\",\n    condition: \"operations.length <= 1\",\n    message: `Ambiguous GraphQL document: contains %s operations`\n  },\n  4: {\n    file: \"@apollo/client/utilities/internal/checkDocument.js\",\n    condition: \"operations.length == 1 && operations[0].operation === expectedType\",\n    message: `Running a %s requires a graphql ` + `%s, but a %s was used instead.`\n  },\n  5: {\n    file: \"@apollo/client/utilities/internal/checkDocument.js\",\n    message: '`%s` is a forbidden field alias name in the selection set for field `%s` in %s \"%s\".'\n  },\n  6: {\n    file: \"@apollo/client/utilities/internal/getFragmentDefinition.js\",\n    condition: \"doc.kind === \\\"Document\\\"\",\n    message: `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`\n  },\n  7: {\n    file: \"@apollo/client/utilities/internal/getFragmentDefinition.js\",\n    condition: \"doc.definitions.length <= 1\",\n    message: \"Fragment must have exactly one definition.\"\n  },\n  8: {\n    file: \"@apollo/client/utilities/internal/getFragmentDefinition.js\",\n    condition: \"fragmentDef.kind === \\\"FragmentDefinition\\\"\",\n    message: \"Must be a fragment definition.\"\n  },\n  9: {\n    file: \"@apollo/client/utilities/internal/getFragmentFromSelection.js\",\n    condition: \"fragment\",\n    message: `No fragment named %s`\n  },\n  10: {\n    file: \"@apollo/client/utilities/internal/getFragmentQueryDocument.js\",\n    message: `Found a %s operation%s. ` + \"No operations are allowed when using a fragment as a query. Only fragments are allowed.\"\n  },\n  11: {\n    file: \"@apollo/client/utilities/internal/getFragmentQueryDocument.js\",\n    condition: \"fragments.length === 1\",\n    message: `Found %s fragments. \\`fragmentName\\` must be provided when there is not exactly 1 fragment.`\n  },\n  12: {\n    file: \"@apollo/client/utilities/internal/getMainDefinition.js\",\n    message: \"Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.\"\n  },\n  13: {\n    file: \"@apollo/client/utilities/internal/getQueryDefinition.js\",\n    condition: \"queryDef && queryDef.operation === \\\"query\\\"\",\n    message: \"Must contain a query definition.\"\n  },\n  15: {\n    file: \"@apollo/client/utilities/internal/shouldInclude.js\",\n    condition: \"evaledValue !== void 0\",\n    message: `Invalid variable referenced in @%s directive.`\n  },\n  16: {\n    file: \"@apollo/client/utilities/internal/shouldInclude.js\",\n    condition: \"directiveArguments && directiveArguments.length === 1\",\n    message: `Incorrect number of arguments for the @%s directive.`\n  },\n  17: {\n    file: \"@apollo/client/utilities/internal/shouldInclude.js\",\n    condition: \"ifArgument.name && ifArgument.name.value === \\\"if\\\"\",\n    message: `Invalid argument for the @%s directive.`\n  },\n  18: {\n    file: \"@apollo/client/utilities/internal/shouldInclude.js\",\n    condition: \"ifValue &&\\n    (ifValue.kind === \\\"Variable\\\" || ifValue.kind === \\\"BooleanValue\\\")\",\n    message: `Argument for the @%s directive must be a variable or a boolean value.`\n  },\n  19: {\n    file: \"@apollo/client/utilities/internal/valueToObjectRepresentation.js\",\n    message: `The inline argument \"%s\" of kind \"%s\"` + \"is not supported. Use variables instead of inline arguments to \" + \"overcome this limitation.\"\n  },\n  20: {\n    file: \"@apollo/client/utilities/graphql/DocumentTransform.js\",\n    condition: \"Array.isArray(cacheKeys)\",\n    message: \"`getCacheKey` must return an array or undefined\"\n  },\n  21: {\n    file: \"@apollo/client/testing/core/mocking/mockLink.js\",\n    condition: \"max > min\",\n    message: \"realisticDelay: `min` must be less than `max`\"\n  },\n  22: {\n    file: \"@apollo/client/testing/core/mocking/mockLink.js\",\n    condition: \"queryWithoutClientOnlyDirectives\",\n    message: \"query is required\"\n  },\n  23: {\n    file: \"@apollo/client/testing/core/mocking/mockLink.js\",\n    condition: \"serverQuery\",\n    message: \"Cannot mock a client-only query. Mocked responses should contain at least one non-client field.\"\n  },\n  24: {\n    file: \"@apollo/client/testing/core/mocking/mockLink.js\",\n    condition: \"(mock.maxUsageCount ?? 1) > 0\",\n    message: \"Mocked response `maxUsageCount` must be greater than 0. Given %s\"\n  },\n  25: {\n    file: \"@apollo/client/react/ssr/prerenderStatic.js\",\n    condition: \"renderCount <= maxRerenders\",\n    message: `Exceeded maximum rerender count of %d.\nThis either means you have very deep \\`useQuery\\` waterfalls in your application\nand need to increase the \\`maxRerender\\` option to \\`prerenderStatic\\`, or that\nyou have an infinite render loop in your application.`\n  },\n  26: {\n    file: \"@apollo/client/react/ssr/prerenderStatic.js\",\n    condition: \"!signal?.aborted\",\n    message: \"The operation was aborted before it could be attempted.\"\n  },\n  27: {\n    file: \"@apollo/client/react/internal/cache/QueryReference.js\",\n    condition: \"!queryRef || QUERY_REFERENCE_SYMBOL in queryRef\",\n    message: \"Expected a QueryRef object, but got something else instead.\"\n  },\n  28: {\n    file: \"@apollo/client/react/hooks/useApolloClient.js\",\n    condition: \"!!client\",\n    message: 'Could not find \"client\" in the context or passed in as an option. ' + \"Wrap the root component in an <ApolloProvider>, or pass an ApolloClient \" + \"instance in via options.\"\n  },\n  29: {\n    file: \"@apollo/client/react/hooks/useLazyQuery.js\",\n    condition: \"resultRef.current\",\n    message: \"useLazyQuery: '%s' cannot be called before executing the query.\"\n  },\n  30: {\n    file: \"@apollo/client/react/hooks/useLazyQuery.js\",\n    condition: \"!calledDuringRender()\",\n    message: \"useLazyQuery: 'execute' should not be called during render. To start a query during render, use the 'useQuery' hook.\"\n  },\n  31: {\n    file: \"@apollo/client/react/hooks/useLoadableQuery.js\",\n    condition: \"!calledDuringRender()\",\n    message: \"useLoadableQuery: 'loadQuery' should not be called during render. To start a query during render, use the 'useBackgroundQuery' hook.\"\n  },\n  32: {\n    file: \"@apollo/client/react/hooks/useLoadableQuery.js\",\n    condition: \"internalQueryRef\",\n    message: \"The query has not been loaded. Please load the query.\"\n  },\n  33: {\n    file: \"@apollo/client/react/hooks/useSubscription.js\",\n    condition: \"!optionsRef.current.skip\",\n    message: \"A subscription that is skipped cannot be restarted.\"\n  },\n  35: {\n    file: \"@apollo/client/react/hooks/internal/validateSuspenseHookOptions.js\",\n    condition: \"supportedFetchPolicies.includes(fetchPolicy)\",\n    message: `The fetch policy \\`%s\\` is not supported with suspense.`\n  },\n  37: {\n    file: \"@apollo/client/react/context/ApolloContext.js\",\n    condition: \"\\\"createContext\\\" in React\",\n    message: \"Invoking `getApolloContext` in an environment where `React.createContext` is not available.\\n\" + \"The Apollo Client functionality you are trying to use is only available in React Client Components.\\n\" + 'Please make sure to add \"use client\" at the top of your file.\\n' +\n    // TODO: change to React documentation once React documentation contains information about Client Components\n    \"For more information, see https://nextjs.org/docs/getting-started/react-essentials#client-components\"\n  },\n  38: {\n    file: \"@apollo/client/react/context/ApolloProvider.js\",\n    condition: \"context.client\",\n    message: \"ApolloProvider was not passed a client instance. Make \" + 'sure you pass in your client via the \"client\" prop.'\n  },\n  39: {\n    file: \"@apollo/client/masking/maskDefinition.js\",\n    condition: \"fragment\",\n    message: \"Could not find fragment with name '%s'.\"\n  },\n  41: {\n    file: \"@apollo/client/masking/maskFragment.js\",\n    condition: \"fragments.length === 1\",\n    message: `Found %s fragments. \\`fragmentName\\` must be provided when there is not exactly 1 fragment.`\n  },\n  42: {\n    file: \"@apollo/client/masking/maskFragment.js\",\n    condition: \"!!fragment\",\n    message: `Could not find fragment with name \"%s\".`\n  },\n  43: {\n    file: \"@apollo/client/masking/maskOperation.js\",\n    condition: \"definition\",\n    message: \"Expected a parsed GraphQL document with a query, mutation, or subscription.\"\n  },\n  47: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    condition: \"hasDirectives([\\\"client\\\"], document)\",\n    message: \"Expected document to contain `@client` fields.\"\n  },\n  48: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    condition: \"hasDirectives([\\\"client\\\"], document)\",\n    message: \"Expected document to contain `@client` fields.\"\n  },\n  49: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    condition: \"fragment\",\n    message: \"No fragment named %s\"\n  },\n  53: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    message: \"Could not resolve __typename on object %o returned from resolver '%s'. '__typename' needs to be returned to properly resolve child fields.\"\n  },\n  54: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    condition: \"fragment\",\n    message: `No fragment named %s`\n  },\n  55: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    condition: \"cache.fragmentMatches\",\n    message: \"The configured cache does not support fragment matching which will lead to incorrect results when executing local resolvers. Please use a cache that implements `fragmetMatches`.\"\n  },\n  57: {\n    file: \"@apollo/client/link/persisted-queries/index.js\",\n    condition: \"options &&\\n    (typeof options.sha256 === \\\"function\\\" ||\\n        typeof options.generateHash === \\\"function\\\")\",\n    message: 'Missing/invalid \"sha256\" or \"generateHash\" function. Please ' + 'configure one using the \"createPersistedQueryLink(options)\" options ' + \"parameter.\"\n  },\n  58: {\n    file: \"@apollo/client/link/persisted-queries/index.js\",\n    condition: \"forward\",\n    message: \"PersistedQueryLink cannot be the last link in the chain.\"\n  },\n  59: {\n    file: \"@apollo/client/link/http/checkFetcher.js\",\n    condition: \"fetcher || typeof fetch !== \\\"undefined\\\"\",\n    message: `\n\"fetch\" has not been found globally and no fetcher has been \\\nconfigured. To fix this, install a fetch package (like \\\nhttps://www.npmjs.com/package/cross-fetch), instantiate the \\\nfetcher, and pass it into your HttpLink constructor. For example:\n\nimport fetch from 'cross-fetch';\nimport { ApolloClient, HttpLink } from '@apollo/client';\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: '/graphql', fetch })\n});\n    `\n  },\n  60: {\n    file: \"@apollo/client/link/http/parseAndCheckHttpResponse.js\",\n    condition: \"response.body && typeof response.body.getReader === \\\"function\\\"\",\n    message: \"Unknown type for `response.body`. Please use a `fetch` implementation that is WhatWG-compliant and that uses WhatWG ReadableStreams for `body`.\"\n  },\n  63: {\n    file: \"@apollo/client/link/core/ApolloLink.js\",\n    message: \"request is not implemented\"\n  },\n  64: {\n    file: \"@apollo/client/incremental/handlers/notImplemented.js\",\n    condition: \"!hasDirectives([\\\"defer\\\"], request.query)\",\n    message: \"`@defer` is not supported without specifying an incremental handler. Please pass a handler as the `incrementalHandler` option to the `ApolloClient` constructor.\"\n  },\n  65: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"options.cache\",\n    message: \"To initialize Apollo Client, you must specify a 'cache' property \" + \"in the options object. \\n\" + \"For more information, please visit: https://go.apollo.dev/c/docs\"\n  },\n  66: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"options.link\",\n    message: \"To initialize Apollo Client, you must specify a 'link' property \" + \"in the options object. \\n\" + \"For more information, please visit: https://go.apollo.dev/c/docs\"\n  },\n  67: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"options.fetchPolicy !== \\\"cache-and-network\\\"\",\n    message: \"The cache-and-network fetchPolicy does not work with client.query, because \" + \"client.query can only return a single result. Please use client.watchQuery \" + \"to receive multiple results from the cache and the network, or consider \" + \"using a different fetchPolicy, such as cache-first or network-only.\"\n  },\n  68: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"options.fetchPolicy !== \\\"standby\\\"\",\n    message: \"The standby fetchPolicy does not work with client.query, because \" + \"standby does not fetch. Consider using a different fetchPolicy, such \" + \"as cache-first or network-only.\"\n  },\n  69: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"options.query\",\n    message: \"query option is required. You must specify your GraphQL document \" + \"in the query option.\"\n  },\n  70: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"options.query.kind === \\\"Document\\\"\",\n    message: 'You must wrap the query string in a \"gql\" tag.'\n  },\n  71: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"!options.returnPartialData\",\n    message: \"returnPartialData option only supported on watchQuery.\"\n  },\n  72: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"!options.pollInterval\",\n    message: \"pollInterval option only supported on watchQuery.\"\n  },\n  73: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"!options.notifyOnNetworkStatusChange\",\n    message: \"notifyOnNetworkStatusChange option only supported on watchQuery.\"\n  },\n  74: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"optionsWithDefaults.mutation\",\n    message: \"The `mutation` option is required. Please provide a GraphQL document in the `mutation` option.\"\n  },\n  75: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"optionsWithDefaults.fetchPolicy === \\\"network-only\\\" ||\\n    optionsWithDefaults.fetchPolicy === \\\"no-cache\\\"\",\n    message: \"Mutations only support 'network-only' or 'no-cache' fetch policies. The default 'network-only' behavior automatically writes mutation results to the cache. Passing 'no-cache' skips the cache write.\"\n  },\n  78: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n    condition: \"this.options.fetchPolicy !== \\\"cache-only\\\"\",\n    message: \"Cannot execute `fetchMore` for 'cache-only' query '%s'. Please use a different fetch policy.\"\n  },\n  79: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n    condition: \"updateQuery\",\n    message: \"You must provide an `updateQuery` function when using `fetchMore` with a `no-cache` fetch policy.\"\n  },\n  83: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    message: \"QueryManager stopped while query was in flight\"\n  },\n  84: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"this.localState\",\n    message: \"Mutation '%s' contains `@client` fields with variables provided by `@export` but local state has not been configured.\"\n  },\n  85: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    message: \"Store reset while query was in flight (not completed in link chain)\"\n  },\n  88: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"!this.getDocumentInfo(query).hasClientExports || this.localState\",\n    message: \"Subscription '%s' contains `@client` fields with variables provided by `@export` but local state has not been configured.\"\n  },\n  89: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"this.localState\",\n    message: \"%s '%s' contains `@client` fields but local state has not been configured.\"\n  },\n  90: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"!hasIncrementalDirective\",\n    message: \"%s '%s' contains `@client` and `@defer` directives. These cannot be used together.\"\n  },\n  91: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"this.localState\",\n    message: \"Query '%s' contains `@client` fields with variables provided by `@export` but local state has not been configured.\"\n  },\n  93: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"this.localState\",\n    message: \"Query '%s' contains `@client` fields but local state has not been configured.\"\n  },\n  94: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"didEmitValue\",\n    message: \"The link chain completed without emitting a value. This is likely unintentional and should be updated to emit a value before completing.\"\n  },\n  95: {\n    file: \"@apollo/client/cache/inmemory/entityStore.js\",\n    condition: \"typeof dataId === \\\"string\\\"\",\n    message: \"store.merge expects a string ID\"\n  },\n  98: {\n    file: \"@apollo/client/cache/inmemory/key-extractor.js\",\n    condition: \"extracted !== void 0\",\n    message: `Missing field '%s' while extracting keyFields from %s`\n  },\n  99: {\n    file: \"@apollo/client/cache/inmemory/policies.js\",\n    condition: \"!old || old === which\",\n    message: `Cannot change root %s __typename more than once`\n  },\n  102: {\n    file: \"@apollo/client/cache/inmemory/policies.js\",\n    message: \"Cannot automatically merge arrays\"\n  },\n  103: {\n    file: \"@apollo/client/cache/inmemory/readFromStore.js\",\n    message: `No fragment named %s`\n  },\n  104: {\n    file: \"@apollo/client/cache/inmemory/readFromStore.js\",\n    condition: \"!isReference(value)\",\n    message: `Missing selection set for object of type %s returned for query field %s`\n  },\n  105: {\n    file: \"@apollo/client/cache/inmemory/writeToStore.js\",\n    message: `Could not identify object %s`\n  },\n  107: {\n    file: \"@apollo/client/cache/inmemory/writeToStore.js\",\n    message: `No fragment named %s`\n  }\n};\nexport const devDebug = {\n  76: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    message: `In client.refetchQueries, Promise.all promise rejected with error %o`\n  },\n  82: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n    message: `Missing cache result fields: %o`\n  }\n};\nexport const devLog = {};\nexport const devWarn = {\n  36: {\n    file: \"@apollo/client/react/hooks/internal/validateSuspenseHookOptions.js\",\n    message: \"Using `returnPartialData` with a `no-cache` fetch policy has no effect. To read partial data from the cache, consider using an alternate fetch policy.\"\n  },\n  40: {\n    file: \"@apollo/client/masking/maskDefinition.js\",\n    message: \"Accessing unmasked field on %s at path '%s'. This field will not be available when masking is enabled. Please read the field from the fragment instead.\"\n  },\n  44: {\n    file: \"@apollo/client/masking/utils.js\",\n    message: \"@unmask 'mode' argument does not support variables.\"\n  },\n  45: {\n    file: \"@apollo/client/masking/utils.js\",\n    message: \"@unmask 'mode' argument must be of type string.\"\n  },\n  46: {\n    file: \"@apollo/client/masking/utils.js\",\n    message: \"@unmask 'mode' argument does not recognize value '%s'.\"\n  },\n  50: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    message: \"The '%s' resolver returned `undefined` instead of a value. This is likely a bug in the resolver. If you didn't mean to return a value, return `null` instead.\"\n  },\n  51: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    message: \"The '%s' field had no cached value and only forced resolvers were run. The value was set to `null`.\"\n  },\n  52: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    message: \"The '%s' field on object %o returned `undefined` instead of a value. The parent resolver did not include the property in the returned value and there was no resolver defined for the field.\"\n  },\n  56: {\n    file: \"@apollo/client/link/ws/index.js\",\n    message: \"`WebSocketLink` uses the deprecated and unmaintained `subscriptions-transport-ws` library. This link is no longer maintained and will be removed in a future major version of Apollo Client. We recommend switching to `GraphQLWsLink` which uses the `graphql-ws` library to send GraphQL operations through WebSocket connections (https://the-guild.dev/graphql/ws).\"\n  },\n  61: {\n    file: \"@apollo/client/link/core/ApolloLink.js\",\n    message: \"[ApolloLink.split]: The test function returned a non-boolean value which could result in subtle bugs (e.g. such as using an `async` function which always returns a truthy value). Got `%o`.\"\n  },\n  62: {\n    file: \"@apollo/client/link/core/ApolloLink.js\",\n    message: \"The terminating link provided to `ApolloLink.execute` called `forward` instead of handling the request. \" + \"This results in an observable that immediately completes and does not emit a value. \" + \"Please provide a terminating link that properly handles the request.\\n\\n\" + \"If you are using a split link, ensure each branch contains a terminating link that handles the request.\"\n  },\n  77: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n    message: `Called refetch(%o) for query %o, which does not declare a $variables variable.\nDid you mean to call refetch(variables) instead of refetch({ variables })?`\n  },\n  81: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n    message: \"Cannot poll on 'cache-only' query '%s' and as such, polling is disabled. Please use a different fetch policy.\"\n  },\n  86: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    message: `Unknown query named \"%s\" requested in refetchQueries options.include array`\n  },\n  87: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    message: `Unknown anonymous query requested in refetchQueries options.include array`\n  },\n  92: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    message: '[%s]: Fragments masked by data masking are inaccessible when using fetch policy \"no-cache\". Please add `@unmask` to each fragment spread to access the data.'\n  },\n  96: {\n    file: \"@apollo/client/cache/inmemory/entityStore.js\",\n    message: \"cache.modify: You are trying to write a Reference that is not part of the store: %o\\n\" + \"Please make sure to set the `mergeIntoStore` parameter to `true` when creating a Reference that is not part of the store yet:\\n\" + \"`toReference(object, true)`\"\n  },\n  97: {\n    file: \"@apollo/client/cache/inmemory/entityStore.js\",\n    message: \"cache.modify: Writing an array with a mix of both References and Objects will not result in the Objects being normalized correctly.\\n\" + \"Please convert the object instance %o to a Reference before writing it to the cache by calling `toReference(object, true)`.\"\n  },\n  100: {\n    file: \"@apollo/client/cache/inmemory/policies.js\",\n    message: `Inferring subtype %s of supertype %s`\n  },\n  101: {\n    file: \"@apollo/client/cache/inmemory/policies.js\",\n    message: `Undefined 'from' passed to readField with arguments %s`\n  },\n  108: {\n    file: \"@apollo/client/cache/inmemory/writeToStore.js\",\n    message: `Cache data may be lost when replacing the %s field of a %s object.\n\nThis could cause additional (usually avoidable) network requests to fetch data that were otherwise cached.\n\nTo address this problem (which is not a bug in Apollo Client), %sdefine a custom merge function for the %s field, so InMemoryCache can safely merge these objects:\n\n  existing: %o\n  incoming: %o\n\nFor more information about these options, please refer to the documentation:\n\n  * Ensuring entity objects have IDs: https://go.apollo.dev/c/generating-unique-identifiers\n  * Defining custom merge functions: https://go.apollo.dev/c/merging-non-normalized-objects\n`\n  },\n  109: {\n    file: \"@apollo/client/cache/core/cache.js\",\n    message: \"Could not identify object passed to `from` for '%s' fragment, either because the object is non-normalized or the key fields are missing. If you are masking this object, please ensure the key fields are requested by the parent object.\"\n  }\n};\nexport const devError = {\n  14: {\n    file: \"@apollo/client/utilities/internal/removeDirectivesFromDocument.js\",\n    message: `Could not find operation or fragment`\n  },\n  34: {\n    file: \"@apollo/client/react/hooks/useSyncExternalStore.js\",\n    message: \"The result of getSnapshot should be cached to avoid an infinite loop\"\n  },\n  80: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n    message: \"Unhandled GraphQL subscription error\"\n  },\n  106: {\n    file: \"@apollo/client/cache/inmemory/writeToStore.js\",\n    message: `Missing field '%s' while writing result %o`\n  }\n};","map":{"version":3,"names":["errorCodes","file","condition","message","devDebug","devLog","devWarn","devError"],"sources":["/home/saurabh-shukla/Desktop/Slack Lite/frontend/node_modules/@apollo/client/invariantErrorCodes.js"],"sourcesContent":["// This file is used by the error message display website and the\n// @apollo/client/includeErrors entry point.\n// This file is not meant to be imported manually.\nexport const errorCodes = {\n  1: {\n    file: \"@apollo/client/utilities/internal/checkDocument.js\",\n    condition: \"doc && doc.kind === \\\"Document\\\"\",\n\n    message: `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`\n  },\n\n  2: {\n    file: \"@apollo/client/utilities/internal/checkDocument.js\",\n    message: `Schema type definitions not allowed in queries. Found: \"%s\"`\n  },\n\n  3: {\n    file: \"@apollo/client/utilities/internal/checkDocument.js\",\n    condition: \"operations.length <= 1\",\n    message: `Ambiguous GraphQL document: contains %s operations`\n  },\n\n  4: {\n    file: \"@apollo/client/utilities/internal/checkDocument.js\",\n    condition: \"operations.length == 1 && operations[0].operation === expectedType\",\n    message: `Running a %s requires a graphql ` + `%s, but a %s was used instead.`\n  },\n\n  5: {\n    file: \"@apollo/client/utilities/internal/checkDocument.js\",\n    message: '`%s` is a forbidden field alias name in the selection set for field `%s` in %s \"%s\".'\n  },\n\n  6: {\n    file: \"@apollo/client/utilities/internal/getFragmentDefinition.js\",\n    condition: \"doc.kind === \\\"Document\\\"\",\n\n    message: `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`\n  },\n\n  7: {\n    file: \"@apollo/client/utilities/internal/getFragmentDefinition.js\",\n    condition: \"doc.definitions.length <= 1\",\n    message: \"Fragment must have exactly one definition.\"\n  },\n\n  8: {\n    file: \"@apollo/client/utilities/internal/getFragmentDefinition.js\",\n    condition: \"fragmentDef.kind === \\\"FragmentDefinition\\\"\",\n    message: \"Must be a fragment definition.\"\n  },\n\n  9: {\n    file: \"@apollo/client/utilities/internal/getFragmentFromSelection.js\",\n    condition: \"fragment\",\n    message: `No fragment named %s`\n  },\n\n  10: {\n    file: \"@apollo/client/utilities/internal/getFragmentQueryDocument.js\",\n\n    message: `Found a %s operation%s. ` +\n        \"No operations are allowed when using a fragment as a query. Only fragments are allowed.\"\n  },\n\n  11: {\n    file: \"@apollo/client/utilities/internal/getFragmentQueryDocument.js\",\n    condition: \"fragments.length === 1\",\n    message: `Found %s fragments. \\`fragmentName\\` must be provided when there is not exactly 1 fragment.`\n  },\n\n  12: {\n    file: \"@apollo/client/utilities/internal/getMainDefinition.js\",\n    message: \"Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.\"\n  },\n\n  13: {\n    file: \"@apollo/client/utilities/internal/getQueryDefinition.js\",\n    condition: \"queryDef && queryDef.operation === \\\"query\\\"\",\n    message: \"Must contain a query definition.\"\n  },\n\n  15: {\n    file: \"@apollo/client/utilities/internal/shouldInclude.js\",\n    condition: \"evaledValue !== void 0\",\n    message: `Invalid variable referenced in @%s directive.`\n  },\n\n  16: {\n    file: \"@apollo/client/utilities/internal/shouldInclude.js\",\n    condition: \"directiveArguments && directiveArguments.length === 1\",\n    message: `Incorrect number of arguments for the @%s directive.`\n  },\n\n  17: {\n    file: \"@apollo/client/utilities/internal/shouldInclude.js\",\n    condition: \"ifArgument.name && ifArgument.name.value === \\\"if\\\"\",\n    message: `Invalid argument for the @%s directive.`\n  },\n\n  18: {\n    file: \"@apollo/client/utilities/internal/shouldInclude.js\",\n    condition: \"ifValue &&\\n    (ifValue.kind === \\\"Variable\\\" || ifValue.kind === \\\"BooleanValue\\\")\",\n    message: `Argument for the @%s directive must be a variable or a boolean value.`\n  },\n\n  19: {\n    file: \"@apollo/client/utilities/internal/valueToObjectRepresentation.js\",\n\n    message: `The inline argument \"%s\" of kind \"%s\"` +\n        \"is not supported. Use variables instead of inline arguments to \" +\n        \"overcome this limitation.\"\n  },\n\n  20: {\n    file: \"@apollo/client/utilities/graphql/DocumentTransform.js\",\n    condition: \"Array.isArray(cacheKeys)\",\n    message: \"`getCacheKey` must return an array or undefined\"\n  },\n\n  21: {\n    file: \"@apollo/client/testing/core/mocking/mockLink.js\",\n    condition: \"max > min\",\n    message: \"realisticDelay: `min` must be less than `max`\"\n  },\n\n  22: {\n    file: \"@apollo/client/testing/core/mocking/mockLink.js\",\n    condition: \"queryWithoutClientOnlyDirectives\",\n    message: \"query is required\"\n  },\n\n  23: {\n    file: \"@apollo/client/testing/core/mocking/mockLink.js\",\n    condition: \"serverQuery\",\n    message: \"Cannot mock a client-only query. Mocked responses should contain at least one non-client field.\"\n  },\n\n  24: {\n    file: \"@apollo/client/testing/core/mocking/mockLink.js\",\n    condition: \"(mock.maxUsageCount ?? 1) > 0\",\n    message: \"Mocked response `maxUsageCount` must be greater than 0. Given %s\"\n  },\n\n  25: {\n    file: \"@apollo/client/react/ssr/prerenderStatic.js\",\n    condition: \"renderCount <= maxRerenders\",\n\n    message: `Exceeded maximum rerender count of %d.\nThis either means you have very deep \\`useQuery\\` waterfalls in your application\nand need to increase the \\`maxRerender\\` option to \\`prerenderStatic\\`, or that\nyou have an infinite render loop in your application.`\n  },\n\n  26: {\n    file: \"@apollo/client/react/ssr/prerenderStatic.js\",\n    condition: \"!signal?.aborted\",\n    message: \"The operation was aborted before it could be attempted.\"\n  },\n\n  27: {\n    file: \"@apollo/client/react/internal/cache/QueryReference.js\",\n    condition: \"!queryRef || QUERY_REFERENCE_SYMBOL in queryRef\",\n    message: \"Expected a QueryRef object, but got something else instead.\"\n  },\n\n  28: {\n    file: \"@apollo/client/react/hooks/useApolloClient.js\",\n    condition: \"!!client\",\n\n    message: 'Could not find \"client\" in the context or passed in as an option. ' +\n        \"Wrap the root component in an <ApolloProvider>, or pass an ApolloClient \" +\n        \"instance in via options.\"\n  },\n\n  29: {\n    file: \"@apollo/client/react/hooks/useLazyQuery.js\",\n    condition: \"resultRef.current\",\n    message: \"useLazyQuery: '%s' cannot be called before executing the query.\"\n  },\n\n  30: {\n    file: \"@apollo/client/react/hooks/useLazyQuery.js\",\n    condition: \"!calledDuringRender()\",\n    message: \"useLazyQuery: 'execute' should not be called during render. To start a query during render, use the 'useQuery' hook.\"\n  },\n\n  31: {\n    file: \"@apollo/client/react/hooks/useLoadableQuery.js\",\n    condition: \"!calledDuringRender()\",\n    message: \"useLoadableQuery: 'loadQuery' should not be called during render. To start a query during render, use the 'useBackgroundQuery' hook.\"\n  },\n\n  32: {\n    file: \"@apollo/client/react/hooks/useLoadableQuery.js\",\n    condition: \"internalQueryRef\",\n    message: \"The query has not been loaded. Please load the query.\"\n  },\n\n  33: {\n    file: \"@apollo/client/react/hooks/useSubscription.js\",\n    condition: \"!optionsRef.current.skip\",\n    message: \"A subscription that is skipped cannot be restarted.\"\n  },\n\n  35: {\n    file: \"@apollo/client/react/hooks/internal/validateSuspenseHookOptions.js\",\n    condition: \"supportedFetchPolicies.includes(fetchPolicy)\",\n    message: `The fetch policy \\`%s\\` is not supported with suspense.`\n  },\n\n  37: {\n    file: \"@apollo/client/react/context/ApolloContext.js\",\n    condition: \"\\\"createContext\\\" in React\",\n\n    message: \"Invoking `getApolloContext` in an environment where `React.createContext` is not available.\\n\" +\n        \"The Apollo Client functionality you are trying to use is only available in React Client Components.\\n\" +\n        'Please make sure to add \"use client\" at the top of your file.\\n' +\n        // TODO: change to React documentation once React documentation contains information about Client Components\n        \"For more information, see https://nextjs.org/docs/getting-started/react-essentials#client-components\"\n  },\n\n  38: {\n    file: \"@apollo/client/react/context/ApolloProvider.js\",\n    condition: \"context.client\",\n\n    message: \"ApolloProvider was not passed a client instance. Make \" +\n        'sure you pass in your client via the \"client\" prop.'\n  },\n\n  39: {\n    file: \"@apollo/client/masking/maskDefinition.js\",\n    condition: \"fragment\",\n    message: \"Could not find fragment with name '%s'.\"\n  },\n\n  41: {\n    file: \"@apollo/client/masking/maskFragment.js\",\n    condition: \"fragments.length === 1\",\n    message: `Found %s fragments. \\`fragmentName\\` must be provided when there is not exactly 1 fragment.`\n  },\n\n  42: {\n    file: \"@apollo/client/masking/maskFragment.js\",\n    condition: \"!!fragment\",\n    message: `Could not find fragment with name \"%s\".`\n  },\n\n  43: {\n    file: \"@apollo/client/masking/maskOperation.js\",\n    condition: \"definition\",\n    message: \"Expected a parsed GraphQL document with a query, mutation, or subscription.\"\n  },\n\n  47: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    condition: \"hasDirectives([\\\"client\\\"], document)\",\n    message: \"Expected document to contain `@client` fields.\"\n  },\n\n  48: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    condition: \"hasDirectives([\\\"client\\\"], document)\",\n    message: \"Expected document to contain `@client` fields.\"\n  },\n\n  49: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    condition: \"fragment\",\n    message: \"No fragment named %s\"\n  },\n\n  53: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    message: \"Could not resolve __typename on object %o returned from resolver '%s'. '__typename' needs to be returned to properly resolve child fields.\"\n  },\n\n  54: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    condition: \"fragment\",\n    message: `No fragment named %s`\n  },\n\n  55: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    condition: \"cache.fragmentMatches\",\n    message: \"The configured cache does not support fragment matching which will lead to incorrect results when executing local resolvers. Please use a cache that implements `fragmetMatches`.\"\n  },\n\n  57: {\n    file: \"@apollo/client/link/persisted-queries/index.js\",\n    condition: \"options &&\\n    (typeof options.sha256 === \\\"function\\\" ||\\n        typeof options.generateHash === \\\"function\\\")\",\n\n    message: 'Missing/invalid \"sha256\" or \"generateHash\" function. Please ' +\n        'configure one using the \"createPersistedQueryLink(options)\" options ' +\n        \"parameter.\"\n  },\n\n  58: {\n    file: \"@apollo/client/link/persisted-queries/index.js\",\n    condition: \"forward\",\n    message: \"PersistedQueryLink cannot be the last link in the chain.\"\n  },\n\n  59: {\n    file: \"@apollo/client/link/http/checkFetcher.js\",\n    condition: \"fetcher || typeof fetch !== \\\"undefined\\\"\",\n\n    message: `\n\"fetch\" has not been found globally and no fetcher has been \\\nconfigured. To fix this, install a fetch package (like \\\nhttps://www.npmjs.com/package/cross-fetch), instantiate the \\\nfetcher, and pass it into your HttpLink constructor. For example:\n\nimport fetch from 'cross-fetch';\nimport { ApolloClient, HttpLink } from '@apollo/client';\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: '/graphql', fetch })\n});\n    `\n  },\n\n  60: {\n    file: \"@apollo/client/link/http/parseAndCheckHttpResponse.js\",\n    condition: \"response.body && typeof response.body.getReader === \\\"function\\\"\",\n    message: \"Unknown type for `response.body`. Please use a `fetch` implementation that is WhatWG-compliant and that uses WhatWG ReadableStreams for `body`.\"\n  },\n\n  63: {\n    file: \"@apollo/client/link/core/ApolloLink.js\",\n    message: \"request is not implemented\"\n  },\n\n  64: {\n    file: \"@apollo/client/incremental/handlers/notImplemented.js\",\n    condition: \"!hasDirectives([\\\"defer\\\"], request.query)\",\n    message: \"`@defer` is not supported without specifying an incremental handler. Please pass a handler as the `incrementalHandler` option to the `ApolloClient` constructor.\"\n  },\n\n  65: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"options.cache\",\n\n    message: \"To initialize Apollo Client, you must specify a 'cache' property \" +\n        \"in the options object. \\n\" +\n        \"For more information, please visit: https://go.apollo.dev/c/docs\"\n  },\n\n  66: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"options.link\",\n\n    message: \"To initialize Apollo Client, you must specify a 'link' property \" +\n        \"in the options object. \\n\" +\n        \"For more information, please visit: https://go.apollo.dev/c/docs\"\n  },\n\n  67: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"options.fetchPolicy !== \\\"cache-and-network\\\"\",\n\n    message: \"The cache-and-network fetchPolicy does not work with client.query, because \" +\n        \"client.query can only return a single result. Please use client.watchQuery \" +\n        \"to receive multiple results from the cache and the network, or consider \" +\n        \"using a different fetchPolicy, such as cache-first or network-only.\"\n  },\n\n  68: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"options.fetchPolicy !== \\\"standby\\\"\",\n\n    message: \"The standby fetchPolicy does not work with client.query, because \" +\n        \"standby does not fetch. Consider using a different fetchPolicy, such \" +\n        \"as cache-first or network-only.\"\n  },\n\n  69: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"options.query\",\n\n    message: \"query option is required. You must specify your GraphQL document \" +\n        \"in the query option.\"\n  },\n\n  70: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"options.query.kind === \\\"Document\\\"\",\n    message: 'You must wrap the query string in a \"gql\" tag.'\n  },\n\n  71: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"!options.returnPartialData\",\n    message: \"returnPartialData option only supported on watchQuery.\"\n  },\n\n  72: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"!options.pollInterval\",\n    message: \"pollInterval option only supported on watchQuery.\"\n  },\n\n  73: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"!options.notifyOnNetworkStatusChange\",\n    message: \"notifyOnNetworkStatusChange option only supported on watchQuery.\"\n  },\n\n  74: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"optionsWithDefaults.mutation\",\n    message: \"The `mutation` option is required. Please provide a GraphQL document in the `mutation` option.\"\n  },\n\n  75: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    condition: \"optionsWithDefaults.fetchPolicy === \\\"network-only\\\" ||\\n    optionsWithDefaults.fetchPolicy === \\\"no-cache\\\"\",\n    message: \"Mutations only support 'network-only' or 'no-cache' fetch policies. The default 'network-only' behavior automatically writes mutation results to the cache. Passing 'no-cache' skips the cache write.\"\n  },\n\n  78: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n    condition: \"this.options.fetchPolicy !== \\\"cache-only\\\"\",\n    message: \"Cannot execute `fetchMore` for 'cache-only' query '%s'. Please use a different fetch policy.\"\n  },\n\n  79: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n    condition: \"updateQuery\",\n    message: \"You must provide an `updateQuery` function when using `fetchMore` with a `no-cache` fetch policy.\"\n  },\n\n  83: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    message: \"QueryManager stopped while query was in flight\"\n  },\n\n  84: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"this.localState\",\n    message: \"Mutation '%s' contains `@client` fields with variables provided by `@export` but local state has not been configured.\"\n  },\n\n  85: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    message: \"Store reset while query was in flight (not completed in link chain)\"\n  },\n\n  88: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"!this.getDocumentInfo(query).hasClientExports || this.localState\",\n    message: \"Subscription '%s' contains `@client` fields with variables provided by `@export` but local state has not been configured.\"\n  },\n\n  89: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"this.localState\",\n    message: \"%s '%s' contains `@client` fields but local state has not been configured.\"\n  },\n\n  90: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"!hasIncrementalDirective\",\n    message: \"%s '%s' contains `@client` and `@defer` directives. These cannot be used together.\"\n  },\n\n  91: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"this.localState\",\n    message: \"Query '%s' contains `@client` fields with variables provided by `@export` but local state has not been configured.\"\n  },\n\n  93: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"this.localState\",\n    message: \"Query '%s' contains `@client` fields but local state has not been configured.\"\n  },\n\n  94: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    condition: \"didEmitValue\",\n    message: \"The link chain completed without emitting a value. This is likely unintentional and should be updated to emit a value before completing.\"\n  },\n\n  95: {\n    file: \"@apollo/client/cache/inmemory/entityStore.js\",\n    condition: \"typeof dataId === \\\"string\\\"\",\n    message: \"store.merge expects a string ID\"\n  },\n\n  98: {\n    file: \"@apollo/client/cache/inmemory/key-extractor.js\",\n    condition: \"extracted !== void 0\",\n    message: `Missing field '%s' while extracting keyFields from %s`\n  },\n\n  99: {\n    file: \"@apollo/client/cache/inmemory/policies.js\",\n    condition: \"!old || old === which\",\n    message: `Cannot change root %s __typename more than once`\n  },\n\n  102: {\n    file: \"@apollo/client/cache/inmemory/policies.js\",\n    message: \"Cannot automatically merge arrays\"\n  },\n\n  103: {\n    file: \"@apollo/client/cache/inmemory/readFromStore.js\",\n    message: `No fragment named %s`\n  },\n\n  104: {\n    file: \"@apollo/client/cache/inmemory/readFromStore.js\",\n    condition: \"!isReference(value)\",\n    message: `Missing selection set for object of type %s returned for query field %s`\n  },\n\n  105: {\n    file: \"@apollo/client/cache/inmemory/writeToStore.js\",\n    message: `Could not identify object %s`\n  },\n\n  107: {\n    file: \"@apollo/client/cache/inmemory/writeToStore.js\",\n    message: `No fragment named %s`\n  }\n};\n\nexport const devDebug = {\n  76: {\n    file: \"@apollo/client/core/ApolloClient.js\",\n    message: `In client.refetchQueries, Promise.all promise rejected with error %o`\n  },\n\n  82: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n    message: `Missing cache result fields: %o`\n  }\n};\n\nexport const devLog = {};\n\nexport const devWarn = {\n  36: {\n    file: \"@apollo/client/react/hooks/internal/validateSuspenseHookOptions.js\",\n    message: \"Using `returnPartialData` with a `no-cache` fetch policy has no effect. To read partial data from the cache, consider using an alternate fetch policy.\"\n  },\n\n  40: {\n    file: \"@apollo/client/masking/maskDefinition.js\",\n    message: \"Accessing unmasked field on %s at path '%s'. This field will not be available when masking is enabled. Please read the field from the fragment instead.\"\n  },\n\n  44: {\n    file: \"@apollo/client/masking/utils.js\",\n    message: \"@unmask 'mode' argument does not support variables.\"\n  },\n\n  45: {\n    file: \"@apollo/client/masking/utils.js\",\n    message: \"@unmask 'mode' argument must be of type string.\"\n  },\n\n  46: {\n    file: \"@apollo/client/masking/utils.js\",\n    message: \"@unmask 'mode' argument does not recognize value '%s'.\"\n  },\n\n  50: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    message: \"The '%s' resolver returned `undefined` instead of a value. This is likely a bug in the resolver. If you didn't mean to return a value, return `null` instead.\"\n  },\n\n  51: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    message: \"The '%s' field had no cached value and only forced resolvers were run. The value was set to `null`.\"\n  },\n\n  52: {\n    file: \"@apollo/client/local-state/LocalState.js\",\n    message: \"The '%s' field on object %o returned `undefined` instead of a value. The parent resolver did not include the property in the returned value and there was no resolver defined for the field.\"\n  },\n\n  56: {\n    file: \"@apollo/client/link/ws/index.js\",\n    message: \"`WebSocketLink` uses the deprecated and unmaintained `subscriptions-transport-ws` library. This link is no longer maintained and will be removed in a future major version of Apollo Client. We recommend switching to `GraphQLWsLink` which uses the `graphql-ws` library to send GraphQL operations through WebSocket connections (https://the-guild.dev/graphql/ws).\"\n  },\n\n  61: {\n    file: \"@apollo/client/link/core/ApolloLink.js\",\n    message: \"[ApolloLink.split]: The test function returned a non-boolean value which could result in subtle bugs (e.g. such as using an `async` function which always returns a truthy value). Got `%o`.\"\n  },\n\n  62: {\n    file: \"@apollo/client/link/core/ApolloLink.js\",\n\n    message: \"The terminating link provided to `ApolloLink.execute` called `forward` instead of handling the request. \" +\n        \"This results in an observable that immediately completes and does not emit a value. \" +\n        \"Please provide a terminating link that properly handles the request.\\n\\n\" +\n        \"If you are using a split link, ensure each branch contains a terminating link that handles the request.\"\n  },\n\n  77: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n\n    message: `Called refetch(%o) for query %o, which does not declare a $variables variable.\nDid you mean to call refetch(variables) instead of refetch({ variables })?`\n  },\n\n  81: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n    message: \"Cannot poll on 'cache-only' query '%s' and as such, polling is disabled. Please use a different fetch policy.\"\n  },\n\n  86: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    message: `Unknown query named \"%s\" requested in refetchQueries options.include array`\n  },\n\n  87: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    message: `Unknown anonymous query requested in refetchQueries options.include array`\n  },\n\n  92: {\n    file: \"@apollo/client/core/QueryManager.js\",\n    message: '[%s]: Fragments masked by data masking are inaccessible when using fetch policy \"no-cache\". Please add `@unmask` to each fragment spread to access the data.'\n  },\n\n  96: {\n    file: \"@apollo/client/cache/inmemory/entityStore.js\",\n\n    message: \"cache.modify: You are trying to write a Reference that is not part of the store: %o\\n\" +\n        \"Please make sure to set the `mergeIntoStore` parameter to `true` when creating a Reference that is not part of the store yet:\\n\" +\n        \"`toReference(object, true)`\"\n  },\n\n  97: {\n    file: \"@apollo/client/cache/inmemory/entityStore.js\",\n\n    message: \"cache.modify: Writing an array with a mix of both References and Objects will not result in the Objects being normalized correctly.\\n\" +\n        \"Please convert the object instance %o to a Reference before writing it to the cache by calling `toReference(object, true)`.\"\n  },\n\n  100: {\n    file: \"@apollo/client/cache/inmemory/policies.js\",\n    message: `Inferring subtype %s of supertype %s`\n  },\n\n  101: {\n    file: \"@apollo/client/cache/inmemory/policies.js\",\n    message: `Undefined 'from' passed to readField with arguments %s`\n  },\n\n  108: {\n    file: \"@apollo/client/cache/inmemory/writeToStore.js\",\n\n    message: `Cache data may be lost when replacing the %s field of a %s object.\n\nThis could cause additional (usually avoidable) network requests to fetch data that were otherwise cached.\n\nTo address this problem (which is not a bug in Apollo Client), %sdefine a custom merge function for the %s field, so InMemoryCache can safely merge these objects:\n\n  existing: %o\n  incoming: %o\n\nFor more information about these options, please refer to the documentation:\n\n  * Ensuring entity objects have IDs: https://go.apollo.dev/c/generating-unique-identifiers\n  * Defining custom merge functions: https://go.apollo.dev/c/merging-non-normalized-objects\n`\n  },\n\n  109: {\n    file: \"@apollo/client/cache/core/cache.js\",\n    message: \"Could not identify object passed to `from` for '%s' fragment, either because the object is non-normalized or the key fields are missing. If you are masking this object, please ensure the key fields are requested by the parent object.\"\n  }\n};\n\nexport const devError = {\n  14: {\n    file: \"@apollo/client/utilities/internal/removeDirectivesFromDocument.js\",\n    message: `Could not find operation or fragment`\n  },\n\n  34: {\n    file: \"@apollo/client/react/hooks/useSyncExternalStore.js\",\n    message: \"The result of getSnapshot should be cached to avoid an infinite loop\"\n  },\n\n  80: {\n    file: \"@apollo/client/core/ObservableQuery.js\",\n    message: \"Unhandled GraphQL subscription error\"\n  },\n\n  106: {\n    file: \"@apollo/client/cache/inmemory/writeToStore.js\",\n    message: `Missing field '%s' while writing result %o`\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}